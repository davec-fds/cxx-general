# Imports from the caller.
Import('*')

# Include the parent directory.
env.Append(CPPPATH = ['..'])

# Include dependency directories.
for incdir in cPOSIXFile['include'] :
  env.Append(CPPPATH = ['#' + incdir])
for incdir in cValReader['include'] :
  env.Append(CPPPATH = ['#' + incdir])

# Object files.
o_INIFile = env.Object      (target = 'INIFile', source = ['INIFile.c++'])
s_INIFile = env.SharedObject(target = 'INIFile', source = ['INIFile.c++'])

# Create a dictionary containing all necessary information and objects to
# compile with INIFile.
cINIFile = {
  'obj'         : cPOSIXFile['obj']     + cValReader['obj']     + [o_INIFile]            ,
  'sobj'        : cPOSIXFile['sobj']    + cValReader['sobj']    + [s_INIFile]            ,
  'include'     : cPOSIXFile['include'] + cValReader['include'] + ['INIFile']            ,
  'headers'     : cPOSIXFile['headers'] + cValReader['headers'] + ['INIFile/INIFile.h++'],
  'defines'     : cPOSIXFile['defines'] + cValReader['defines']                          ,
  'own_obj'     : [o_INIFile]                                                            ,
  'own_sobj'    : [s_INIFile]                                                            ,
  'own_include' : 'INIFile'                                                              ,
  'own_headers' : ['INIFile/INIFile.h++']                                                ,
  'own_defines' : []
}

# Return.
Return('cINIFile')

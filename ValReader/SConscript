# Imports.
from sconsgeneral import Module

# Imports from caller.
Import('*')

# Include the parent directory.
env.Append(CPPPATH = ['..'])

# Bring in dependencies.
cArbInt.apply(env)
cArb   .apply(env)

# Create our module definition.
cValReader            = Module()
cValReader.own_module = 'ValReader'
cValReader.take(cArbInt)
cValReader.take(cArb   )

# Headers.
cValReader.own_include = 'ValReader'
cValReader.own_headers = ['ValReader.h++']

# Object files.
o_ValReader = env.Object      (target = 'ValReader', source = ['ValReader.c++'])
s_ValReader = env.SharedObject(target = 'ValReader', source = ['ValReader.c++'])
cValReader.own_objects        = [o_ValReader]
cValReader.own_shared_objects = [s_ValReader]

# Return.
Return('cValReader')

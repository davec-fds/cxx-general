# Imports.
from sconsgeneral import Module
 
# Imports from caller.
Import('*')

# Include the parent directory.
env.Append(CPPPATH = ['..'])

# Bring in dependencies.
cUArbInt.apply(env)

# Create our module definition.
cArb = Module()
cArb.take(cUArbInt)

# Headers.
cArb.own_include = 'Arb'
cArb.own_headers = ['Arb.h++']

# Object files.
o_Arb = env.Object      (target = 'Arb', source = ['Arb.c++'])
s_Arb = env.SharedObject(target = 'Arb', source = ['Arb.c++'])
cArb.own_objects        = [o_Arb]
cArb.own_shared_objects = [s_Arb]

# Return.
Return('cArb')

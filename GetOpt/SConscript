# Imports from the caller.
Import('*')

# Include the parent directory.
env.Append(CPPPATH = ['..'])

# Include dependancy directories.
for incdir in cwrapText['include'] :
  env.Append(CPPPATH = ['#' + incdir])
for incdir in cArb['include'] :
  env.Append(CPPPATH = ['#' + incdir])
for incdir in cValReader['include'] :
  env.Append(CPPPATH = ['#' + incdir])

# Object files.
o_GetOpt = env.Object      (target = 'GetOpt', source = ['GetOpt.c++'])
s_GetOpt = env.SharedObject(target = 'GetOpt', source = ['GetOpt.c++'])

# Create a dictionary containing all necessary information and objects to
# compile with GetOpt.
cGetOpt = {
  'obj'         : cwrapText['obj']     + cArb['obj']     + cValReader['obj']     + [o_GetOpt]           ,
  'sobj'        : cwrapText['sobj']    + cArb['sobj']    + cValReader['sobj']    + [s_GetOpt]           ,
  'include'     : cwrapText['include'] + cArb['include'] + cValReader['include'] + ['GetOpt']           ,
  'headers'     : cwrapText['headers'] + cArb['headers'] + cValReader['headers'] + ['GetOpt/GetOpt.h++'],
  'defines'     : cwrapText['defines'] + cArb['defines'] + cValReader['defines']                        ,
  'own_obj'     : [o_GetOpt]                                                                            ,
  'own_sobj'    : [s_GetOpt]                                                                            ,
  'own_include' : 'GetOpt'                                                                              ,
  'own_headers' : ['GetOpt/GetOpt.h++']                                                                 ,
  'own_defines' : []
}

# Return.
Return('cGetOpt')
